
R version 3.6.1 Patched (2019-10-31 r77350) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(SummarizedExperiment)
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames,
    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,
    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,
    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,
    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,
    union, unique, unsplit, which, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following object is masked from ‘package:base’:

    expand.grid

Loading required package: IRanges
Loading required package: GenomeInfoDb
Loading required package: Biobase
Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.

Loading required package: DelayedArray
Loading required package: matrixStats

Attaching package: ‘matrixStats’

The following objects are masked from ‘package:Biobase’:

    anyMissing, rowMedians

Loading required package: BiocParallel

Attaching package: ‘DelayedArray’

The following objects are masked from ‘package:matrixStats’:

    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRanges

The following objects are masked from ‘package:base’:

    aperm, apply, rowsum

> library(jaffelab)
Loading required package: rafalib
> library(recount)
Setting options('download.file.method.GEOquery'='auto')
Setting options('GEOquery.inmemory.gpl'=FALSE)
> library(WGCNA)
Loading required package: dynamicTreeCut
Loading required package: fastcluster

Attaching package: ‘fastcluster’

The following object is masked from ‘package:stats’:

    hclust



Attaching package: ‘WGCNA’

The following object is masked from ‘package:IRanges’:

    cor

The following object is masked from ‘package:S4Vectors’:

    cor

The following object is masked from ‘package:stats’:

    cor

> library(sva)
Loading required package: mgcv
Loading required package: nlme

Attaching package: ‘nlme’

The following object is masked from ‘package:IRanges’:

    collapse

This is mgcv 1.8-30. For overview type 'help("mgcv-package")'.
Loading required package: genefilter

Attaching package: ‘genefilter’

The following objects are masked from ‘package:matrixStats’:

    rowSds, rowVars

> library(lmerTest)
Loading required package: lme4
Loading required package: Matrix

Attaching package: ‘Matrix’

The following object is masked from ‘package:S4Vectors’:

    expand


Attaching package: ‘lme4’

The following object is masked from ‘package:nlme’:

    lmList


Attaching package: ‘lmerTest’

The following object is masked from ‘package:lme4’:

    lmer

The following object is masked from ‘package:stats’:

    step

> 
> setwd('/dcl02/lieber/ptsd/RNAseq/VA_PTSD_RNAseq/')
> 
> #load objects
> load("rdas/WGCNA/constructed_network_signed_bicor_Amyg_MDD.rda",verbose=TRUE)
Loading objects:
  net
  fNames
> load('rdas/rse_gene_PTSD_VA_LIBD_qcAndAnnotated_n1285.Rdata',verbose=TRUE)
Loading objects:
  rse_gene
> 
> ## add MDS (get ethnicity via genotype)
> load("rdas/PTSD_LIBD_VA_MDSonly_n326.rda")
> rownames(mds) = ss(rownames(mds),"_")
> colData(rse_gene) = cbind(colData(rse_gene) , mds[rse_gene$BrNum,])
> 
> ###########
> # filter ##
> gIndex = rowMeans(getRPKM(rse_gene, "Length")) > 0.2
> rse_gene <- rse_gene[gIndex , ]
> 
> rse_gene$CatRegion <- ifelse(rse_gene$Region == "BasoAmyg" | rse_gene$Region == "MedialAmyg", "Amyg","Cortex")
> gkeepIndex = which(rse_gene$CatRegion == "Amyg")
> rse_gene <- rse_gene[, gkeepIndex]
> 
> ##########
> ## model #
> ##########
> load('rdas/PTSD_qsvs_Regionintxn_Amyg.Rdata',verbose=TRUE)
Loading objects:
  qSV_mat
  modQsva
  mod
> 
> ##ensure intercept, region, interaction, group, agedeath, and sex are up first for cleaning
> colnames(modQsva)
 [1] "Int"                        "GroupMDD"                  
 [3] "GroupPTSD"                  "RegionMedialAmyg"          
 [5] "AgeDeath"                   "SexM"                      
 [7] "mitoRate"                   "rRNA_rate"                 
 [9] "totalAssignedGene"          "RIN"                       
[11] "overallMapRate"             "ERCCsumLogErr"             
[13] "snpPC1"                     "snpPC2"                    
[15] "snpPC3"                     "snpPC8"                    
[17] "snpPC9"                     "snpPC10"                   
[19] "GroupMDD.RegionMedialAmyg"  "GroupPTSD.RegionMedialAmyg"
[21] "PC1"                        "PC2"                       
[23] "PC3"                        "PC4"                       
[25] "PC5"                        "PC6"                       
[27] "PC7"                        "PC8"                       
[29] "PC9"                        "PC10"                      
[31] "PC11"                       "PC12"                      
[33] "PC13"                       "PC14"                      
[35] "PC15"                       "PC16"                      
[37] "PC17"                       "PC18"                      
[39] "PC19"                       "PC20"                      
> dim(modQsva)
[1] 644  40
> modQsva = modQsva[,c(1,2,4,5,6,19,3,7:18,20:40)]
> head(modQsva)
       Int GroupMDD RegionMedialAmyg AgeDeath SexM GroupMDD.RegionMedialAmyg
R16254   1        0                0    41.71    1                         0
R16050   1        0                1    41.71    1                         0
R15943   1        0                0    40.53    1                         0
R15823   1        0                1    40.53    1                         0
R15944   1        0                0    48.21    1                         0
R15824   1        0                1    48.21    1                         0
       GroupPTSD   mitoRate    rRNA_rate totalAssignedGene RIN overallMapRate
R16254         1 0.02663121 0.0001562905         0.3474869 7.1         0.8061
R16050         1 0.03374476 0.0001148327         0.3480459 6.7         0.7731
R15943         1 0.04838333 0.0001721693         0.3918726 6.3         0.7048
R15823         1 0.04651516 0.0002277970         0.3646860 7.0         0.7336
R15944         1 0.02255159 0.0001237117         0.4174737 7.2         0.8376
R15824         1 0.02739953 0.0001435578         0.3604873 7.8         0.8508
       ERCCsumLogErr     snpPC1      snpPC2     snpPC3       snpPC8     snpPC9
R16254    -19.762861  0.1276800 -0.00734816 -0.0178312 -0.000202292 0.00124942
R16050    -15.263356  0.1276800 -0.00734816 -0.0178312 -0.000202292 0.00124942
R15943     -6.500831 -0.0240917 -0.00641316 -0.0228262  0.008276590 0.00246881
R15823    -17.678529 -0.0240917 -0.00641316 -0.0228262  0.008276590 0.00246881
R15944    -17.287535 -0.0224736 -0.00437300 -0.0222278  0.004635840 0.00465256
R15824    -27.472653 -0.0224736 -0.00437300 -0.0222278  0.004635840 0.00465256
            snpPC10 GroupPTSD.RegionMedialAmyg        PC1       PC2        PC3
R16254  0.000412613                          0 -37.268158  3.903986 -0.2531635
R16050  0.000412613                          1 -36.036007  1.470234  0.3152461
R15943 -0.002414600                          0 -26.831869 -3.464622  2.7478295
R15823 -0.002414600                          1 -36.845059 -4.016426  2.6244489
R15944  0.005004020                          0  -6.884191  5.054243 -0.8144763
R15824  0.005004020                          1 -20.305149 -1.217986  1.1770860
              PC4         PC5        PC6       PC7         PC8        PC9
R16254 -0.2806576 -2.48884665  3.3710890  3.534302 -2.70398110 -1.0074505
R16050  0.5670313 -1.63001437  0.4094878  1.179453 -2.34750106  0.2166394
R15943  3.7888751 -3.01411260  1.1689602 -2.078227 -3.20303296  0.7391280
R15823  1.2630444 -2.46824349  0.5918710  1.107380 -1.05584618 -1.3517549
R15944  0.2309617  0.08536699  0.6197569  3.118236 -1.87396484 -0.7327845
R15824  3.1477231 -4.31494663 -0.2830393  1.541531 -0.07340043 -1.4725978
              PC10       PC11        PC12        PC13        PC14       PC15
R16254  0.62476426  0.5000421 -2.39403139  0.02623977 -0.05099905  1.1710680
R16050  0.37033292 -0.1013760 -0.27230554  0.02676258 -0.33844562 -0.0179550
R15943  1.28149927  0.8666532 -1.34559785 -0.68729175  1.16507944 -1.5530308
R15823  0.53263307  0.5250963 -0.06321386  0.10293867 -0.94722401 -1.3780754
R15944 -0.33933484 -0.4905930 -1.58169900  1.04809874 -0.18268067  0.4269413
R15824 -0.05034224 -2.0327480 -1.64086598 -0.02516526  0.13216681 -0.6044523
             PC16        PC17       PC18      PC19       PC20
R16254 -0.6731449 -1.16629458  0.8362304 1.9161399 -1.2887230
R16050 -0.6553372 -0.53265449  1.0372134 1.7177210 -0.2721466
R15943 -0.3583132  0.05719871 -0.5763404 0.4606816 -0.9858175
R15823 -0.9107000 -0.16303313 -0.1726028 1.1707793  1.2867463
R15944 -1.4848967 -1.04057970  0.8894297 0.2671667 -0.3445165
R15824 -0.1900658 -0.05292326 -0.9787955 0.3415636 -0.4055140
> 
> ### Dx association ###
> brnums<-rse_gene$BrNum
> 
> coefAdj = t(apply(net$MEs, 2, function(y)
+ 	summary(lmerTest::lmer(y~ modQsva[ ,1:6] - 1 + (1|brnums)))$coef[2,]))
> 
> save(coefAdj, file="rdas/WGCNA/MEvsDx_Amyg_MDD.rda")
> 
> coefAdj[coefAdj[,5] < 0.1,]
         Estimate  Std. Error       df   t value    Pr(>|t|)
ME5   0.008094808 0.004556746 564.2269  1.776445 0.076198430
ME21 -0.008097694 0.004526873 603.2609 -1.788805 0.074147802
ME24 -0.008739500 0.004638979 571.7733 -1.883927 0.060081928
ME2  -0.008587068 0.004638434 482.8148 -1.851286 0.064738833
ME1  -0.011181420 0.004635793 581.8578 -2.411975 0.016174846
ME10 -0.009847524 0.004602035 579.6592 -2.139820 0.032786208
ME20 -0.014585683 0.004485242 613.7837 -3.251928 0.001209064
ME22 -0.013843040 0.004555403 576.9822 -3.038818 0.002482605
ME13  0.007499836 0.004397892 578.1161  1.705325 0.088670976
> 
> #GO using clusterProfiler
> library(clusterProfiler)
Registered S3 method overwritten by 'enrichplot':
  method               from
  fortify.enrichResult DOSE
clusterProfiler v3.14.0  For help: https://guangchuangyu.github.io/software/clusterProfiler

If you use clusterProfiler in published research, please cite:
Guangchuang Yu, Li-Gen Wang, Yanyan Han, Qing-Yu He. clusterProfiler: an R package for comparing biological themes among gene clusters. OMICS: A Journal of Integrative Biology. 2012, 16(5):284-287.

Attaching package: ‘clusterProfiler’

The following object is masked from ‘package:DelayedArray’:

    simplify

> library(org.Hs.eg.db)
Loading required package: AnnotationDbi

> 				  
> #make matrix
> # split genes into modules
> moduleGeneList_adj = split(rowData(rse_gene)$EntrezID, net$colors)
> moduleGeneList_adj = lapply(moduleGeneList_adj, function(x) x[!is.na(x)])
> 
> #universe of expressed genes
> universe <- as.character(rowData(rse_gene)$EntrezID[!is.na(rowData(rse_gene)$EntrezID)])
> 
> ## run GO 
> go_modules_amyg <- compareCluster(moduleGeneList_adj, fun = "enrichGO",
+                 universe = universe, OrgDb = org.Hs.eg.db,
+                 ont = "ALL", pAdjustMethod = "BH",
+                 pvalueCutoff  = 1, qvalueCutoff  = 1, readable= TRUE)
> 
> save(go_modules_amyg, file="rdas/WGCNA/wgcna_Amyg_GO_clusterProfiler_MDD.rda")
> 
> ## Reproducibility information
> print('Reproducibility information:')
[1] "Reproducibility information:"
> Sys.time()
[1] "2020-02-16 14:28:26 EST"
> proc.time()
    user   system  elapsed 
1629.285   24.134 1656.265 
> options(width = 120)
> session_info()
Error in session_info() : could not find function "session_info"
Execution halted
