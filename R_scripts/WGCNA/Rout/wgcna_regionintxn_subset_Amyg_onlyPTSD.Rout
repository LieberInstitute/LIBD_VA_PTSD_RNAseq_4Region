
R version 3.6.1 Patched (2019-10-31 r77350) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #WGCNA
> #Amyg subset
> #onlyPTSD
> 
> library(SummarizedExperiment)
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames,
    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,
    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,
    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,
    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,
    union, unique, unsplit, which, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following object is masked from ‘package:base’:

    expand.grid

Loading required package: IRanges
Loading required package: GenomeInfoDb
Loading required package: Biobase
Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.

Loading required package: DelayedArray
Loading required package: matrixStats

Attaching package: ‘matrixStats’

The following objects are masked from ‘package:Biobase’:

    anyMissing, rowMedians

Loading required package: BiocParallel

Attaching package: ‘DelayedArray’

The following objects are masked from ‘package:matrixStats’:

    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRanges

The following objects are masked from ‘package:base’:

    aperm, apply, rowsum

> library(jaffelab)
Loading required package: rafalib
> library(recount)
Setting options('download.file.method.GEOquery'='auto')
Setting options('GEOquery.inmemory.gpl'=FALSE)
> library(WGCNA)
Loading required package: dynamicTreeCut
Loading required package: fastcluster

Attaching package: ‘fastcluster’

The following object is masked from ‘package:stats’:

    hclust



Attaching package: ‘WGCNA’

The following object is masked from ‘package:IRanges’:

    cor

The following object is masked from ‘package:S4Vectors’:

    cor

The following object is masked from ‘package:stats’:

    cor

> library(sva)
Loading required package: mgcv
Loading required package: nlme

Attaching package: ‘nlme’

The following object is masked from ‘package:IRanges’:

    collapse

This is mgcv 1.8-30. For overview type 'help("mgcv-package")'.
Loading required package: genefilter

Attaching package: ‘genefilter’

The following objects are masked from ‘package:matrixStats’:

    rowSds, rowVars

> 
> setwd('/dcl02/lieber/ptsd/RNAseq/VA_PTSD_RNAseq/')
> 
> ## multithread
> allowWGCNAThreads(8)
Allowing multi-threading with up to 8 threads.
> 
> #load rse objects
> load('rdas/rse_gene_PTSD_VA_LIBD_qcAndAnnotated_n1285.Rdata')
> 
> ## add MDS (get ethnicity via genotype)
> load("rdas/PTSD_LIBD_VA_MDSonly_n326.rda")
> rownames(mds) = ss(rownames(mds),"_")
> colData(rse_gene) = cbind(colData(rse_gene) , mds[rse_gene$BrNum,])
> 
> ###########
> # filter ##
> gIndex = rowMeans(getRPKM(rse_gene, "Length")) > 0.2
> rse_gene <- rse_gene[gIndex , ]
> 
> rse_gene$CatRegion <- ifelse(rse_gene$Region == "BasoAmyg" | rse_gene$Region == "MedialAmyg", "Amyg","Cortex")
> gkeepIndex = which(rse_gene$CatRegion == "Amyg")
> rse_gene <- rse_gene[, gkeepIndex]
> 
> ##########
> ## model #
> ##########
> load('rdas/PTSD_qsvs_Regionintxn_onlyPTSD_Amyg.Rdata',verbose=TRUE)
Loading objects:
  qSV_mat
  modQsva
  mod
> 
> ##ensure intercept, region, interaction, group, agedeath, and sex are up first for cleaning
> colnames(modQsva)
 [1] "Int"                       "onlyPTSD"                 
 [3] "RegionMedialAmyg"          "AgeDeath"                 
 [5] "SexM"                      "mitoRate"                 
 [7] "rRNA_rate"                 "totalAssignedGene"        
 [9] "RIN"                       "overallMapRate"           
[11] "ERCCsumLogErr"             "snpPC1"                   
[13] "snpPC2"                    "snpPC3"                   
[15] "snpPC8"                    "snpPC9"                   
[17] "snpPC10"                   "onlyPTSD.RegionMedialAmyg"
[19] "PC1"                       "PC2"                      
[21] "PC3"                       "PC4"                      
[23] "PC5"                       "PC6"                      
[25] "PC7"                       "PC8"                      
[27] "PC9"                       "PC10"                     
[29] "PC11"                      "PC12"                     
[31] "PC13"                      "PC14"                     
[33] "PC15"                      "PC16"                     
[35] "PC17"                      "PC18"                     
[37] "PC19"                      "PC20"                     
> dim(modQsva)
[1] 644  38
> modQsva = modQsva[,c(1:5,18,6:17,19:38)]
> head(modQsva)
       Int onlyPTSD RegionMedialAmyg AgeDeath SexM onlyPTSD.RegionMedialAmyg
R16254   1        1                0    41.71    1                         0
R16050   1        1                1    41.71    1                         1
R15943   1        1                0    40.53    1                         0
R15823   1        1                1    40.53    1                         1
R15944   1        1                0    48.21    1                         0
R15824   1        1                1    48.21    1                         1
         mitoRate    rRNA_rate totalAssignedGene RIN overallMapRate
R16254 0.02663121 0.0001562905         0.3474869 7.1         0.8061
R16050 0.03374476 0.0001148327         0.3480459 6.7         0.7731
R15943 0.04838333 0.0001721693         0.3918726 6.3         0.7048
R15823 0.04651516 0.0002277970         0.3646860 7.0         0.7336
R15944 0.02255159 0.0001237117         0.4174737 7.2         0.8376
R15824 0.02739953 0.0001435578         0.3604873 7.8         0.8508
       ERCCsumLogErr     snpPC1      snpPC2     snpPC3       snpPC8     snpPC9
R16254    -19.762861  0.1276800 -0.00734816 -0.0178312 -0.000202292 0.00124942
R16050    -15.263356  0.1276800 -0.00734816 -0.0178312 -0.000202292 0.00124942
R15943     -6.500831 -0.0240917 -0.00641316 -0.0228262  0.008276590 0.00246881
R15823    -17.678529 -0.0240917 -0.00641316 -0.0228262  0.008276590 0.00246881
R15944    -17.287535 -0.0224736 -0.00437300 -0.0222278  0.004635840 0.00465256
R15824    -27.472653 -0.0224736 -0.00437300 -0.0222278  0.004635840 0.00465256
            snpPC10        PC1       PC2        PC3        PC4         PC5
R16254  0.000412613 -37.268158  3.903986 -0.2531635 -0.2806576 -2.48884665
R16050  0.000412613 -36.036007  1.470234  0.3152461  0.5670313 -1.63001437
R15943 -0.002414600 -26.831869 -3.464622  2.7478295  3.7888751 -3.01411260
R15823 -0.002414600 -36.845059 -4.016426  2.6244489  1.2630444 -2.46824349
R15944  0.005004020  -6.884191  5.054243 -0.8144763  0.2309617  0.08536699
R15824  0.005004020 -20.305149 -1.217986  1.1770860  3.1477231 -4.31494663
              PC6       PC7         PC8        PC9        PC10       PC11
R16254  3.3710890  3.534302 -2.70398110 -1.0074505  0.62476426  0.5000421
R16050  0.4094878  1.179453 -2.34750106  0.2166394  0.37033292 -0.1013760
R15943  1.1689602 -2.078227 -3.20303296  0.7391280  1.28149927  0.8666532
R15823  0.5918710  1.107380 -1.05584618 -1.3517549  0.53263307  0.5250963
R15944  0.6197569  3.118236 -1.87396484 -0.7327845 -0.33933484 -0.4905930
R15824 -0.2830393  1.541531 -0.07340043 -1.4725978 -0.05034224 -2.0327480
              PC12        PC13        PC14       PC15       PC16        PC17
R16254 -2.39403139  0.02623977 -0.05099905  1.1710680 -0.6731449 -1.16629458
R16050 -0.27230554  0.02676258 -0.33844562 -0.0179550 -0.6553372 -0.53265449
R15943 -1.34559785 -0.68729175  1.16507944 -1.5530308 -0.3583132  0.05719871
R15823 -0.06321386  0.10293867 -0.94722401 -1.3780754 -0.9107000 -0.16303313
R15944 -1.58169900  1.04809874 -0.18268067  0.4269413 -1.4848967 -1.04057970
R15824 -1.64086598 -0.02516526  0.13216681 -0.6044523 -0.1900658 -0.05292326
             PC18      PC19       PC20
R16254  0.8362304 1.9161399 -1.2887230
R16050  1.0372134 1.7177210 -0.2721466
R15943 -0.5763404 0.4606816 -0.9858175
R15823 -0.1726028 1.1707793  1.2867463
R15944  0.8894297 0.2671667 -0.3445165
R15824 -0.9787955 0.3415636 -0.4055140
> 
> ## clean expression
> geneExprs = log2(getRPKM(rse_gene,"Length")+1)
> geneExprsClean = cleaningY(geneExprs, modQsva, P=6)
> 
> 
> #########################
> ## get power
> sftthresh1 <- pickSoftThreshold(t(geneExprsClean), powerVector = c(seq(1, 10, by = 1), seq(12, 20, by = 2)), networkType = "signed", verbose = 5)
pickSoftThreshold: will use block size 1719.
 pickSoftThreshold: calculating connectivity for given powers...
   ..working on genes 1 through 1719 of 26020
   ..working on genes 1720 through 3438 of 26020
   ..working on genes 3439 through 5157 of 26020
   ..working on genes 5158 through 6876 of 26020
   ..working on genes 6877 through 8595 of 26020
   ..working on genes 8596 through 10314 of 26020
   ..working on genes 10315 through 12033 of 26020
   ..working on genes 12034 through 13752 of 26020
   ..working on genes 13753 through 15471 of 26020
   ..working on genes 15472 through 17190 of 26020
   ..working on genes 17191 through 18909 of 26020
   ..working on genes 18910 through 20628 of 26020
   ..working on genes 20629 through 22347 of 26020
   ..working on genes 22348 through 24066 of 26020
   ..working on genes 24067 through 25785 of 26020
   ..working on genes 25786 through 26020 of 26020
   Power SFT.R.sq  slope truncated.R.sq  mean.k. median.k.  max.k.
1      1  0.01130  6.580          0.980 1.33e+04  1.32e+04 14100.0
2      2  0.00077 -0.859          0.961 6.81e+03  6.78e+03  7720.0
3      3  0.03320 -3.760          0.948 3.52e+03  3.49e+03  4300.0
4      4  0.09880 -4.790          0.930 1.83e+03  1.81e+03  2430.0
5      5  0.22200 -5.700          0.929 9.62e+02  9.47e+02  1390.0
6      6  0.30900 -5.450          0.931 5.09e+02  4.99e+02   805.0
7      7  0.39100 -5.080          0.941 2.72e+02  2.65e+02   473.0
8      8  0.48200 -3.980          0.926 1.47e+02  1.42e+02   281.0
9      9  0.78300 -4.450          0.949 8.01e+01  7.65e+01   194.0
10    10  0.92100 -4.420          0.956 4.43e+01  4.16e+01   147.0
11    12  0.98000 -3.470          0.974 1.42e+01  1.26e+01    97.6
12    14  0.98600 -2.680          0.987 4.97e+00  3.93e+00    73.4
13    16  0.98600 -2.170          0.984 1.95e+00  1.27e+00    59.3
14    18  0.98500 -1.840          0.980 8.85e-01  4.27e-01    50.1
15    20  0.98100 -1.630          0.976 4.68e-01  1.48e-01    43.3
> cat(sftthresh1$powerEstimate)
10> save(sftthresh1, file = "rdas/WGCNA/power_object_Amyg_onlyPTSD.rda")
> 
> ## run wgcna
> net = blockwiseModules(t(geneExprsClean), power = sftthresh1$powerEstimate,
+                             networkType = "signed", minModuleSize = 30,corType="bicor",
+                             reassignThreshold = 0, mergeCutHeight = 0.25,
+                             numericLabels = TRUE, pamRespectsDendro = FALSE,
+                             saveTOMs = TRUE, verbose = 5, maxBlockSize = 30000,
+                             saveTOMFileBase = "rdas/WGCNA/wgcna_signed_TOM_Amyg_onlyPTSD")
 Calculating module eigengenes block-wise from all genes
   Flagging genes and samples with too many missing values...
    ..step 1
 ..Working on block 1 .
    TOM calculation: adjacency..
    ..will use 8 parallel threads.
alpha: 1.000000
     Fraction of slow calculations: 0.000000
    ..connectivity..
    ..matrix multiplication (system BLAS)..
    ..normalization..
    ..done.
   ..saving TOM for block 1 into file rdas/WGCNA/wgcna_signed_TOM_Amyg_onlyPTSD-block.1.RData
 ....clustering..
 ....detecting modules..
     ..done.
 ....calculating module eigengenes..
     moduleEigengenes : Working on ME for module 1
     moduleEigengenes : Working on ME for module 2
     moduleEigengenes : Working on ME for module 3
     moduleEigengenes : Working on ME for module 4
     moduleEigengenes : Working on ME for module 5
     moduleEigengenes : Working on ME for module 6
     moduleEigengenes : Working on ME for module 7
     moduleEigengenes : Working on ME for module 8
     moduleEigengenes : Working on ME for module 9
     moduleEigengenes : Working on ME for module 10
     moduleEigengenes : Working on ME for module 11
     moduleEigengenes : Working on ME for module 12
     moduleEigengenes : Working on ME for module 13
     moduleEigengenes : Working on ME for module 14
     moduleEigengenes : Working on ME for module 15
     moduleEigengenes : Working on ME for module 16
     moduleEigengenes : Working on ME for module 17
     moduleEigengenes : Working on ME for module 18
     moduleEigengenes : Working on ME for module 19
     moduleEigengenes : Working on ME for module 20
     moduleEigengenes : Working on ME for module 21
     moduleEigengenes : Working on ME for module 22
     moduleEigengenes : Working on ME for module 23
     moduleEigengenes : Working on ME for module 24
 ....checking kME in modules..
     ..removing 190 genes from module 1 because their KME is too low.
     ..removing 72 genes from module 2 because their KME is too low.
     ..removing 60 genes from module 3 because their KME is too low.
     ..removing 107 genes from module 4 because their KME is too low.
     ..removing 52 genes from module 5 because their KME is too low.
 ..merging modules that are too close..
     mergeCloseModules: Merging modules whose distance is less than 0.25
       multiSetMEs: Calculating module MEs.
         Working on set 1 ...
         moduleEigengenes: Calculating 25 module eigengenes in given set.
alpha: 1.000000
       multiSetMEs: Calculating module MEs.
         Working on set 1 ...
         moduleEigengenes: Calculating 24 module eigengenes in given set.
alpha: 1.000000
       Calculating new MEs...
       multiSetMEs: Calculating module MEs.
         Working on set 1 ...
         moduleEigengenes: Calculating 24 module eigengenes in given set.
alpha: 1.000000
> fNames = rownames(geneExprs)
> save(net, fNames, file = "rdas/WGCNA/constructed_network_signed_bicor_Amyg_onlyPTSD.rda")
> 
> 
> proc.time()
     user    system   elapsed 
13263.593    64.352 13220.599 
